package com.mglizerin.tuningfork.samples

import com.mglizerin.tuningfork.sound.Chord
import com.mglizerin.tuningfork.sound.interfaces.IChord
import com.mglizerin.tuningfork.sound.interfaces.ISound

fun createChord(vararg sounds: ISound): IChord {
    val chordSounds = mutableListOf<ISound>()

    for (sound in sounds) {
        chordSounds.add(sound)
    }

    return Chord(chordSounds)
}

val A5_Q = createChord(A5Q)
val G5_Q = createChord(G5Q)
val F5_Q = createChord(F5Q)
val E5_Q = createChord(E5Q)
val D5_Q = createChord(D5Q)
val C5_Q = createChord(C5Q)
val B4_Q = createChord(B4Q)
val A4_Q = createChord(A4Q)
val G4_Q = createChord(G4Q)
val F4_Q = createChord(F4Q)
val E4_Q = createChord(E4Q)
val D4_Q = createChord(D4Q)
val C4_Q = createChord(C4Q)
val B3_Q = createChord(B3Q)
val A3_Q = createChord(A3Q)

val A5S_Q = createChord(A5SQ)
val G5S_Q = createChord(G5SQ)
val F5S_Q = createChord(F5SQ)
val E5S_Q = createChord(E5SQ)
val D5S_Q = createChord(D5SQ)
val C5S_Q = createChord(C5SQ)
val B4S_Q = createChord(B4SQ)
val A4S_Q = createChord(A4SQ)
val G4S_Q = createChord(G4SQ)
val F4S_Q = createChord(F4SQ)
val E4S_Q = createChord(E4SQ)
val D4S_Q = createChord(D4SQ)
val C4S_Q = createChord(C4SQ)
val B3S_Q = createChord(B3SQ)
val A3S_Q = createChord(A3SQ)

val A5F_Q = createChord(A5FQ)
val G5F_Q = createChord(G5FQ)
val F5F_Q = createChord(F5FQ)
val E5F_Q = createChord(E5FQ)
val D5F_Q = createChord(D5FQ)
val C5F_Q = createChord(C5FQ)
val B4F_Q = createChord(B4FQ)
val A4F_Q = createChord(A4FQ)
val G4F_Q = createChord(G4FQ)
val F4F_Q = createChord(F4FQ)
val E4F_Q = createChord(E4FQ)
val D4F_Q = createChord(D4FQ)
val C4F_Q = createChord(C4FQ)
val B3F_Q = createChord(B3FQ)
val A3F_Q = createChord(A3FQ)

val A5_H = createChord(A5H)
val G5_H = createChord(G5H)
val F5_H = createChord(F5H)
val E5_H = createChord(E5H)
val D5_H = createChord(D5H)
val C5_H = createChord(C5H)
val B4_H = createChord(B4H)
val A4_H = createChord(A4H)
val G4_H = createChord(G4H)
val F4_H = createChord(F4H)
val E4_H = createChord(E4H)
val D4_H = createChord(D4H)
val C4_H = createChord(C4H)
val B3_H = createChord(B3H)
val A3_H = createChord(A3H)

val A5S_H = createChord(A5SH)
val G5S_H = createChord(G5SH)
val F5S_H = createChord(F5SH)
val E5S_H = createChord(E5SH)
val D5S_H = createChord(D5SH)
val C5S_H = createChord(C5SH)
val B4S_H = createChord(B4SH)
val A4S_H = createChord(A4SH)
val G4S_H = createChord(G4SH)
val F4S_H = createChord(F4SH)
val E4S_H = createChord(E4SH)
val D4S_H = createChord(D4SH)
val C4S_H = createChord(C4SH)
val B3S_H = createChord(B3SH)
val A3S_H = createChord(A3SH)

val A5F_H = createChord(A5FH)
val G5F_H = createChord(G5FH)
val F5F_H = createChord(F5FH)
val E5F_H = createChord(E5FH)
val D5F_H = createChord(D5FH)
val C5F_H = createChord(C5FH)
val B4F_H = createChord(B4FH)
val A4F_H = createChord(A4FH)
val G4F_H = createChord(G4FH)
val F4F_H = createChord(F4FH)
val E4F_H = createChord(E4FH)
val D4F_H = createChord(D4FH)
val C4F_H = createChord(C4FH)
val B3F_H = createChord(B3FH)
val A3F_H = createChord(A3FH)